# -*- coding: utf-8 -*-
"""Gauuss-Seilde.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-hUORobLZ_y0YyUDpB2ylzWtfR33-JPK

Metodo de Gauss Seidel
"""

import numpy as np

def Gseid (a, b, n, x, imax, es, lamda):
  for i in range (0,n):
    dummy = a[i][i]
    for j in range (0,n):
      a[i][j] = a[i][j] /(dummy+1e-6)
    b[i]= b[i]/(dummy+1e-6)
  
  for i in range (0, n):
    suma = b[i]
    for j in range (0, n):
      if (i != j):
        suma = suma - (a[i][j] *x[j])
      x[i] = suma
  inm=1
  centinela = 0
  while(centinela == 1 or (inm <= imax)):
    centinela = 1
    for i in range (0,n):
      old = x[i]
      suma = b[i]
      for j in range (0,n):
        if(i != j):
          suma = suma-a[i][j]*x[j]
      x[i] = lamda*suma +(1-lamda)*old

      if(centinela == 1 and x[i] != 0):
        
        ea = abs(x[i] - old)/abs(x[i])*100

        if (ea < es):
          centinela = 0
          
    inm+=1

  return x

a = np.array([[6,0,-1,0,0],[1,-1,0,0,0],[3,1,0,0,-4],[0,1,8,-11,2],[0,1,-9,0,0]])
b = np.array([50,0,0,0,-160])
n = 5
x = np.array([10.,10.,10.,10.,10.])
'''
a = np.array([[1.0,0.0,0.0],[0.0,1.0,0.0],[0.0,0.0,1.0]])
b = np.array([1.0,3.0,6.0])
n = 3
x = np.array([0.,0.,0.])


a = np.array([[130,-30,0],[1,-1,0],[40,60,-120]],dtype=np.float64)
b = np.array([500,0,-500],dtype=np.float64)
n = 3
x = np.array([0.,0.,0.])
'''
x = Gseid (a, b, n, x, 20, 0.01, 0.1)
print('la soluciÃ³n es: c1 = {},c2 = {},c3 = {},c4 = {},c5 = {}'.format(x[0],x[1],x[2],x[3],x[4]))
